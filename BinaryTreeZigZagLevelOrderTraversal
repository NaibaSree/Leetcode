/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
    List<List<Integer>> res=new LinkedList();
    if(root==null)
    return res;
    Queue<TreeNode> q=new LinkedList();
    q.add(root);
    int flag=0;
    while(!q.isEmpty()){
        List<Integer> levels=new LinkedList();
        int size=q.size();
        for(int i=0;i<size;i++){
        TreeNode node=q.poll();
        levels.add(node.val);
        if(node.right!=null)
        q.add(node.right);
        if(node.left!=null)
        q.add(node.left);
        
    }
    if(flag==0){
        Collections.reverse(levels);
    res.add(levels);
    flag=1-flag;
    }
    else{
        
        res.add(levels);
        flag=1-flag;
    }
    }
    return res;
    }
}
